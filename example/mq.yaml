name: "rocketmq-test"
parameter:
- key: GetPhase
  value: "kubectl get #{kind} #{name} -o=jsonpath='{.status.phase}'"
- key: GetRevision
  value: "kubectl get #{kind} #{name} -o=jsonpath='{.metadata.resourceVersion}'"
- key: DeleteAllSlave
  value: "slaveLists=$(kubectl  get #{kind}  #{name}  -o jsonpath=\"{.status.Conditions[?(@.role=='Slave')].brokerName}\");for element in ${slaveLists[@]}; do kubectl delete pod $element ;done;"
- key: DeleteOneMaster
  value: "masterLists=$(kubectl  get #{kind}  #{name}  -o jsonpath=\"{.status.Conditions[?(@.role=='Master')].brokerName}\")&& masterLists=($masterLists) && kubectl delete pod  ${masterLists[0]}"
- key: DeleteOneNameserver
  value: "masterLists=$(kubectl  get #{kind}  #{name}  -o jsonpath=\"{.status.Conditions[?(@.role=='Nameserver')].brokerName}\")&& masterLists=($masterLists) && kubectl delete pod  ${masterLists[0]}"
- key: name
  value: mq-rocketmq
- key: kind
  value: brokercluster
jobs:
  # 初始化状态检查
  - name: "Init"
    timeout: 2m
    interval: 5s
    verificate:
      - cmd: #{GetPhase}
        value: "Running"
        name: "phaseRunning"
  # 删除所有slave测试
  - name: "DeleteAllSlave"
    cmd: #{DeleteAllSlave}
    timeout: 1m
    initTime: 5s
    interval: 5s
    variable:
      - key: resourceVersion
        valueFromCmd: #{GetRevision}
    verificate:
      - cmd: #{GetRevision}
        operator: "noEqual"
        name: "versionChange"
        value: "@resourceVersion"
      - cmd: #{GetPhase}
        value: "Running"
        name: "phaseRunning"
  # 删除一个Nameserver测试
  - name: "DeleteOneNameserver"
    cmd: #{DeleteOneNameserver}
    timeout: 1m
    initTime: 5s
    interval: 5s
    variable:
      - key: resourceVersion
        valueFromCmd: #{GetRevision}
    verificate:
      - cmd: #{GetRevision}
        operator: "noEqual"
        name: "versionChange"
        value: "@resourceVersion"
      - cmd: #{GetPhase}
        value: "Running"
        name: "phaseRunning"
  # 删除一个master测试
  - name: "DeleteOneMaster"
    cmd: #{DeleteOneMaster}
    timeout: 1m
    initTime: 5s
    interval: 5s
    variable:
      - key: resourceVersion
        valueFromCmd: #{GetRevision}
    verificate:
      - cmd: #{GetRevision}
        operator: "noEqual"
        name: "versionChange"
        value: "@resourceVersion"
      - cmd: #{GetPhase}
        value: "Running"
        name: "phaseRunning"





